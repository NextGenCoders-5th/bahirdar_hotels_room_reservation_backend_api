openapi: 3.0.0
info:
  title: Payments API
  version: 3.0.0
tags:
  - name: Payments
    description: Payments API
paths:
  /api/v1/payments:
    get:
      summary: Get all payments
      description: Get all payments
      operationId: getAllPayments
      tags:
        - Payments
      responses:
        '200':
          description: list of payments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  results:
                    type: number
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/IPaymentResponse'
        '500':
          description: Internal server error'
    post:
      summary: Create a payment
      description: Create a payment
      operationId: createPayment
      tags:
        - Payments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePaymentDto'
      responses:
        '201':
          description: a payment object
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/payments/{id}:
    get:
      summary: Get a payment by id
      description: Get a payment by id
      operationId: getPaymentById
      tags:
        - Payments
      responses:
        '200':
          description: a payment object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IPaymentResponse'
        '404':
          description: Payment not found
        '500':
          description: Internal server error
    patch:
      summary: Update a payment by id
      description: Update a payment by id
      operationId: updatePaymentById
      tags:
        - Payments
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentDto'
      responses:
        '200':
          description: a payment object
        '400':
          description: Invalid input
        '404':
          description: Payment not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a payment by id
      description: Delete a payment by id
      operationId: deletePaymentById
      tags:
        - Payments
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Payment deleted
        '404':
          description: Payment not found
        '500':
          description: Internal server error
  /api/v1/payments/chapa/verify-save-booking-payment:
    get:
      summary: Verify and save booking payment.
      description: Verify and save booking payment. this api routes is the callback api for successful payment with chapa payment get way
      operationId: verifyAndSaveBookingPayment
      tags:
        - Payments
      responses:
        '200':
          description: Payment verified and saved successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/payments/chapa/accept-booking-payment/{bookingId}:
    get:
      summary: Accept booking payment.
      description: Accept booking payment. with this api endpoint you can initialize the payment and get checkout url from chapa
      operationId: acceptBookingPayment
      security:
        - bearerAuth: []
      tags:
        - Payments
      responses:
        '200':
          description: Payment accepted successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /api/v1/payments/chapa/verify-booking-payment/{trx_ref}:
    get:
      summary: Verify booking payment
      description: Verify booking payment.
      security:
        - bearerAuth: []
      tags:
        - Payments
      operationId: verifyBookingPayment
      parameters:
        - name: trx_ref
          in: path
          required: true
          description: transaction reference
          schema:
            type: string
      responses:
        '200':
          description: Payment verified successfully
        '400':
          description: Invalid input
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    IPaymentResponse:
      type: object
      properties:
        _id:
          type: string
        hotelId:
          type: string
        roomId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        phoneNumber:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        hotelName:
          type: string
        hotelSummary:
          type: string
        roomNumber:
          type: string
        roomType:
          type: string
        roomFacilities:
          type: array
          items:
            type: string
        capacity:
          type: number
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        totalPrice:
          type: number
        pricePerNight:
          type: number
        numOfNights:
          type: number
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreatePaymentDto:
      type: object
      required:
        - hotelId
        - roomId
        - firstName
        - lastName
        - email
        - dateOfBirth
        - phoneNumber
        - gender
        - hotelName
        - hotelSummary
        - roomNumber
        - roomType
        - roomFacilities
        - capacity
        - checkIn
        - checkOut
        - totalPrice
        - pricePerNight
        - numOfNights
      properties:
        hotelId:
          type: string
        roomId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        phoneNumber:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        hotelName:
          type: string
        hotelSummary:
          type: string
        roomNumber:
          type: string
        roomType:
          type: string
        roomFacilities:
          type: array
          items:
            type: string
        capacity:
          type: number
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        totalPrice:
          type: number
        pricePerNight:
          type: number
        numOfNights:
          type: number
    UpdatePaymentDto:
      type: object
      properties:
        hotelId:
          type: string
        roomId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        phoneNumber:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        hotelName:
          type: string
        hotelSummary:
          type: string
        roomNumber:
          type: string
        roomType:
          type: string
        roomFacilities:
          type: array
          items:
            type: string
        capacity:
          type: number
        checkIn:
          type: string
          format: date-time
        checkOut:
          type: string
          format: date-time
        totalPrice:
          type: number
        pricePerNight:
          type: number
        numOfNights:
          type: number
