openapi: 3.0.0
info:
  title: Users API
  version: 3.0.0
tags:
  - name: Users
    description: Users API
paths:
  /api/v1/users:
    get:
      summary: Get all users
      description: Get all users
      operationId: getAllUsers
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: list of users
        '500':
          description: Internal server error'
    post:
      summary: Create a user
      description: Create a user
      operationId: createUser
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: a user object
        '400':
          description: Invalid input
        '500':
          description: Internal server error

  /api/v1/users/{id}:
    get:
      summary: Get a user by id
      description: Get a user by id
      operationId: getUserById
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: user id
          schema:
            type: string
      responses:
        '200':
          description: a user object
        '404':
          description: User not found
        '500':
          description: Internal server error
    patch:
      summary: Update a user by id
      description: Update a user by id
      operationId: updateUserById
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: user id
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: a user object
        '404':
          description: User not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a user by id
      description: Delete a user by id
      operationId: deleteUserById
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: user id
          schema:
            type: string
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
        '500':
          description: Internal server error

  /api/v1/users/current-user:
    get:
      summary: Get current user
      description: Get currently logged in user
      operationId: getCurrentUser
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: a user object
        '404':
          description: User not found
        '500':
          description: Internal server error

  /api/v1/users/user-with-bookings:
    get:
      summary: Get user with bookings
      description: Get user with bookings
      operationId: getUserWithBookings
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: a user object
        '404':
          description: User not found
        '500':
          description: Internal server error
  /api/v1/users/complete-onboarding:
    post:
      summary: Complete onboarding
      description: Complete onboarding
      operationId: completeOnboarding
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingDto'
      responses:
        '200':
          description: a user object
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /api/v1/users/request-identity-verification:
    post:
      summary: Request identity verification
      description: Request identity verification
      operationId: requestIdentityVerification
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: a user object
        '400':
          description: Invalid input
        '500':
          description: Internal server error
  /api/v1/users/verify-user-account/{id}:
    patch:
      summary: Verify user account
      description: Verify user account
      operationId: verifyUserAccount
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: user id
          schema:
            type: string
      responses:
        '200':
          description: a user object
        '404':
          description: User not found
        '500':
          description: Internal server error
  /api/v1/users/decline-verification-request/{id}:
    patch:
      summary: Decline verification request
      description: Decline verification request
      operationId: declineVerificationRequest
      tags:
        - Users
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: user id
          schema:
            type: string
      responses:
        '200':
          description: a user object
        '404':
          description: User not found
        '500':
          description: Internal server error
  /api/v1/users/onboarding-users:
    get:
      summary: Get onboarding users
      description: Get onboarding users
      operationId: getOnboardingUsers
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: list of users
        '500':
          description: Internal server error

  /api/v1/users/verification-requests:
    get:
      summary: Get verification requests
      description: Get verification requests
      operationId: getVerificationRequests
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: list of users
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    IAddress:
      type: object
      properties:
        country:
          type: string
        city:
          type: string
        subcity:
          type: string
        woreda:
          type: string
        street:
          type: string
    IUserResponse:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        email:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
        phoneNumber:
          type: string
        role:
          type: string
          enum:
            - user
            - admin
            - manager
            - cashier
        profilePicture:
          type: string
        address:
          type: object
          $ref: '#/components/schemas/IAddress'
        idPhoto_front:
          type: string
        idPhoto_back:
          type: string
        isVerified:
          type: boolean
        isOnboarding:
          type: boolean
        isVerificationRequested:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateUserDto:
      type: object
      required:
        - firstName
        - lastName
        - username
        - dateOfBirth
        - email
        - phoneNumber
        - password
        - passwordConfirm
        - address
        - profilePicture
        - idPhoto_front
        - idPhoto_back
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
        address:
          type: string
          $ref: '#/components/schemas/IAddress'
        profilePicture:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        idPhoto_front:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        idPhoto_back:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
    UpdateUserDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        email:
          type: string
        phoneNumber:
          type: string
        password:
          type: string
        passwordConfirm:
          type: string
        address:
          type: string
          $ref: '#/components/schemas/IAddress'
        profilePicture:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        idPhoto_front:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        idPhoto_back:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        isVerified:
          type: boolean
        isOnboarding:
          type: boolean
        isVerificationRequested:
          type: boolean
        role:
          type: string
          enum:
            - user
            - admin
            - manager
            - cashier
    OnboardingDto:
      type: object
      required:
        - firstName
        - lastName
        - dateOfBirth
        - gender
        - phoneNumber
        - address
        - idPhoto_front
        - idPhoto_back
        - profilePicture
      properties:
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        gender:
          type: string
          enum:
            - male
            - female
        phoneNumber:
          type: string
        address:
          type: string
          $ref: '#/components/schemas/IAddress'
        idPhoto_front:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        idPhoto_back:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
        profilePicture:
          type: array
          items:
            type: string
            format: binary
            maximum: 1
